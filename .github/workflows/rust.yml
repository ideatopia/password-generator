name: Rust

on:
  push:
    branches: [ "*" ]
  pull_request:

env:
  RUSTFLAGS: -Dwarnings
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - uses: actions/checkout@v4
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    needs: rustfmt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        # Latest stable and MSRV. We only run checks with all features enabled
        # for the MSRV build to keep CI fast, since other configurations should also work.
        rust_version: [ stable, "1.79.0" ]
        include:
          - os: ubuntu-latest
            install-deps: sudo apt install -y build-essential gcc
          - os: windows-latest
            install-deps: echo "No additional dependencies for Windows"
          - os: macos-latest
            install-deps: echo "No additional dependencies for macOS"
    steps:
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
          components: clippy
      - uses: actions/checkout@v4

      - name: Run `cargo clippy` with no features
        if: ${{ matrix.rust_version == 'stable' }}
        run: cargo clippy --verbose --no-default-features -- -D warnings -D clippy::dbg_macro

      - name: Run `cargo clippy` with all features
        run: cargo clippy --verbose --all-features -- -D warnings -D clippy::dbg_macro

  test:
    needs: clippy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Run tests with all features
        run: cargo test --all-features
